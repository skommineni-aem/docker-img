package com.tf.axp.common.core.utils;

import com.day.cq.dam.api.AssetManager;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.sling.api.resource.ResourceResolver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.Date;
import java.util.Map;
import java.util.Set;

public class CommonUtils {
    private Logger logger = LoggerFactory.getLogger(CommonUtils.class);

    public void writeToExcel(Map<Integer, Object[]> data, ResourceResolver resourceResolver, String fileName, String pathToSave, String SheetName) {
        logger.info("starting with writeToExcel");
        //Blank workbook
        XSSFWorkbook workbook = new XSSFWorkbook();
        //Create a blank sheet
        XSSFSheet sheet = workbook.createSheet(SheetName);
        //Iterate over data and write to sheet
        Set<Integer> keyset = data.keySet();
        int rownum = 0;
        for (int key : keyset) {
            Row row = sheet.createRow(rownum++);
            Object[] objArr = data.get(key);
            int cellnum = 0;
            for (Object obj : objArr) {
                Cell cell = row.createCell(cellnum++);
                if (obj instanceof String) {
                    cell.setCellValue((String) obj);
                } else if (obj instanceof Boolean) {
                    cell.setCellValue((Boolean) obj);
                } else if (obj instanceof Date) {
                    cell.setCellValue((Date) obj);
                } else if (obj instanceof Double) {
                    cell.setCellValue((Double) obj);
                }
            }
        }
        try {
            File excelFile = new File(fileName);
            //Write the workbook in file system
            FileOutputStream os = new FileOutputStream(excelFile);
            workbook.write(os);
            workbook.close();
            AssetManager manager = resourceResolver.adaptTo(AssetManager.class);
            InputStream is = new FileInputStream(excelFile);
            manager.createAsset(pathToSave + fileName, is, "application/vnd.ms-excel", true);
            logger.info(fileName + " generated successfully.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
